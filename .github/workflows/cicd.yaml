name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Go application
        run: go build -o go-web-app

      - name: Run tests
        run: go test ./...

  code-quality:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62.0  # Latest version compatible with Go 1.24
          args: --timeout=5m

  push:
    runs-on: ubuntu-latest
    needs: [build, code-quality]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.sha }}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update tag in Helm chart
        run: |
          if [ ! -f helm/go-web-app-chart/values.yaml ]; then
            echo "Error: Helm chart values.yaml not found"
            exit 1
          fi
          sed -i "s/tag: .*/tag: \"${{ github.sha }}\"/" helm/go-web-app-chart/values.yaml
          if ! grep "tag: \"${{ github.sha }}\"" helm/go-web-app-chart/values.yaml; then
            echo "Error: Failed to update tag in values.yaml"
            exit 1
          fi

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.4

      - name: Lint Helm chart
        run: helm lint helm/go-web-app-chart

      - name: Commit and push updated Helm chart
        run: |
          git config --global user.email "smritisah863@gmail.com"
          git config --global user.name "SmritiSah"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart [skip ci]" || echo "No changes to commit"
          git push